name: Deploy CloudFormation Templates

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

env:
  AWS_REGION: 'us-east-1'
  PROJECT: ${{ github.event.repository.name }}
  TEMPLATE_INFRA: cloudformations/infrastructure.yml

jobs:
  environment-check:
    runs-on: ubuntu-latest
    steps:
      - name: 'Setting no-production Variables'
        run: |
          echo 'ENVIRONMENT=dev' >> $GITHUB_ENV
          echo 'RETENTION_IN_DAYS=30' >> $GITHUB_ENV
      - name: 'Definition of composite variables'
        run: |
          echo "STACK_INFRA=${{env.ENVIRONMENT}}-infra-${{env.PROJECT}}-stack" >> $GITHUB_ENV
      - name: 'Definition of cloudFormations'
        env:
          EXIST_TEMPLATE_INFRA: ${{ hashFiles('cloudformations/infrastructure.yml') != '' }}
        run: |
          echo "EXIST_TEMPLATE_INFRA=${EXIST_TEMPLATE_INFRA}"
    outputs:
      ENVIRONMENT: ${{env.ENVIRONMENT}}
      STACK_SECURITY: ${{env.STACK_SECURITY}}
      STACK_PERSISTENCE: ${{env.STACK_PERSISTENCE}}
      STACK_INFRA: ${{env.STACK_INFRA}}
      RETENTION_IN_DAYS: ${{env.RETENTION_IN_DAYS}}

  build-and-deploy-infrastructure:
    runs-on: ubuntu-latest
    needs:
      - environment-check
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup version Phyton
        uses: actions/setup-python@v2
      - name: Setup SAM version
        uses: aws-actions/setup-sam@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Build Layers
        run: |
          ROOT_PATH=$(pwd)
          LAYERS="$ROOT_PATH/layers"
          if [ -d $LAYERS ]; then
              cd $LAYERS
              date=$(date '+%Y-%m-%d %H:%M:%S')
              echo -e "$date [ INFO ] :: BUILDING LAYERS FOR: Nodejs"
              for layerName in *; do
                  LAYER_PATH="$layerName/node_modules/$layerName"
                  if [ -d $LAYER_PATH ]; then
                      cd $LAYER_PATH
                      if [ -f package.json ]; then
                          echo -e "Build layer: $layerName"
                          npm install --prod
                          cd -
                      else
                         echo "$date [ ERROR ] :: package.json NOT FOUND IN $layerName/"
                      fi
                  else
                      date=$(date '+%Y-%m-%d %H:%M:%S')
                      echo "$date [ WARN ] :: THE DIRECTORY '$layerName/node_modules/$layerName' DOES NOT EXIST"
                  fi
              done
          else
              date=$(date '+%Y-%m-%d %H:%M:%S')
              echo "$date [ WARN ] :: THE DIRECTORY 'LAYERS' DOES NOT EXIST, THE PROCESS OF LAYER INSTALLATION WILL NOT TAKE PLACE IN THIS DEPLOYMENT"
          fi
      - name: SAM Build InfrastructureStack
        run: sam build --use-container -t ${TEMPLATE_INFRA}
      - name: SAM Deploy InfrastructureStack
        run: sam deploy
          --no-confirm-changeset
          --no-fail-on-empty-changeset
          --resolve-s3
          --capabilities CAPABILITY_NAMED_IAM
          --region ${{env.AWS_REGION}}
          --stack-name ${{needs.environment-check.outputs.STACK_INFRA}}
          --parameter-overrides Environment=${{needs.environment-check.outputs.ENVIRONMENT}} StackName=${{needs.environment-check.outputs.STACK_INFRA}} Project=${{env.PROJECT}} RetentionInDays=${{needs.environment-check.outputs.RETENTION_IN_DAYS}}
